###############################################################################
######                            DEPLOYMENTS                            ######
###############################################################################

apiVersion: apps/v1
kind: Deployment
metadata:
  name: front-end-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: front-endF
  template:
    metadata:
      labels:
        app: front-end
    spec:
      containers:
        - name: front-end-container
          image: efrei/front-end:1
          imagePullPolicy: Always
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: back-end-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: back-end
  template:
    metadata:
      labels:
        app: back-end
    spec:
      containers:
        - name: back-end-container
          image: efrei/back-end:1
          imagePullPolicy: Always
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:15.2-alpine
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 5432
          env:
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: postgres-secret
                key: password
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgresdb
      volumes:
        - name: postgresdb
          persistentVolumeClaim:
            claimName: postgres-pv-claim
---

###############################################################################
######                              SERVICES                             ######
###############################################################################

apiVersion: v1
kind: Service
metadata:
  name: front-end-service
spec:
  ports:
    - name: http
      targetPort: 8080
      port: 80
  type: NodePort
  selector:
    app: front-end
---

apiVersion: v1
kind: Service
metadata:
  name: back-end-service
spec:
  ports:
    - name: http
      targetPort: 80
      port: 80
  type: ClusterIP
  selector:
    app: back-end
---

apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  type: NodePort
  ports:
   - port: 5432
  selector:
   app: postgres
---

###############################################################################
######                               VOLUMES                             ######
###############################################################################

kind: PersistentVolume
apiVersion: v1
metadata:
    name: postgres-pv-volume
    labels:
      type: local
      app: postgres
spec:
  storageClassName: manual
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "data"
---

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: postgres-pv-claim
  labels:
    app: postgres
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
---

###############################################################################
######                               SECRETS                             ######
###############################################################################

apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
type: kubernetes.io/basic-auth
stringData:
  password: root
---

###############################################################################
######                               INGRESS                             ######
###############################################################################

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: front-end-ingress
  annotations:
    kubernetes.io/ingress.class: traefik
spec:
  rules:
    - host: front-end.localhost
      http:
        paths:
          - path: /
            backend:
              serviceName: front-end-service
              servicePort: http
